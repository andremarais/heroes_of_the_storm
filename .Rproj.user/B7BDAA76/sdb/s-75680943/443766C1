{
    "collab_server" : "",
    "contents" : "library(ggplot2)\nlibrary(scales)\nsource('www/multiplot.R')\n\nhero_winrate <- read.csv('data/MMR_hero_overtime.csv')\nhero_winrate$Game.Date <-\n  as.Date(as.character(hero_winrate$Game.Date), '%Y-%m-%d')\nheroes <- read.csv('data/hero_info.csv')\nhero_winrate <-\n  merge(hero_winrate, heroes[, c('HeroID', 'PrimaryName')], by = 'HeroID', all.x =\n          T)\nWinningMMRperHero <- read.csv('data/WinningMMRperHero.csv')\nauto <- read.csv('data/Auto.csv')\n\nHeroLevel_MMR <- read.csv('data/HeroLevel_MMR.csv')\nHeroLevel_Diff <- read.csv('data/HeroLevel_Diff.csv')\nlevels(HeroLevel_Diff$Difficulty) <-\n  c('Easy', 'Medium', 'Hard', 'Very Hard')\nHeroLevel_Group <- read.csv('data/HeroLevel_Group.csv')\nHeroLevel_SubGroup <- read.csv('data/HeroLevel_SubGroup.csv')\n\npop <- read.csv('data/Popularity.csv')\nlevels(pop$Difficulty) <- c('Easy', 'Medium', 'Hard', 'Very Hard')\npop <-\n  aggregate(data = pop, X0 ~ PrimaryName + Group + Difficulty, mean)\n\n\nGroup_diff <- read.csv('data/Group_diff.csv')\n\n\nplot_colors_fill <- c('dodgerblue2',\n                      'indianred2',\n                      'goldenrod3',\n                      'palegreen3')\n\nplot_colors_outline <- c('dodgerblue4',\n                         'indianred4',\n                         'goldenrod4',\n                         'palegreen4')\n\nshinyServer(function(input, output) {\n  output$hotsplot <- renderPlot({\n    # Plot for Hero MMR rating over time\n    if (input$HotsSelectInput == 'Hero MMR rating' &\n        input$HeroMMRRadio == 'Over time') {\n      ggplot(hero_winrate[hero_winrate$Game.Date == input$HeroMMRSlider,]) +\n        geom_bar(\n          aes(\n            x = reorder(PrimaryName,-Adj.MMR.Before),\n            y = Adj.MMR.Before,\n            fill = Group,\n            col = Group\n          ),\n          stat = 'identity',\n          alpha = .55\n        ) +\n        theme_minimal() %+replace%\n        theme(\n          axis.text.x = element_blank(),\n          plot.background = element_rect(fill = '#808080', color = '#494794'),\n          panel.grid.major = element_line(colour = '#009cff'),\n          panel.grid.minor = element_line(colour = '#009cff')\n        ) +\n        annotate(\n          geom = 'text',\n          x = reorder(hero_winrate[hero_winrate$Game.Date == input$HeroMMRSlider, 'PrimaryName'],-hero_winrate[hero_winrate$Game.Date == input$HeroMMRSlider, 'Adj.MMR.Before']),\n          y = 500,\n          label = reorder(hero_winrate[hero_winrate$Game.Date == input$HeroMMRSlider, 'PrimaryName'],-hero_winrate[hero_winrate$Game.Date == input$HeroMMRSlider, 'Adj.MMR.Before']),\n          angle = 90,\n          col = 'black',\n          size = 5\n        ) +\n        xlab('Heroes') +\n        ylab('MMR Rating') +\n        scale_fill_manual(values = plot_colors_fill) +\n        scale_color_manual(values = plot_colors_outline)\n      \n    }\n    \n    # Plot for Hero MMR rating over win rate\n    else if (input$HotsSelectInput == 'Hero MMR rating' &\n             input$HeroMMRRadio == 'Win vs loose') {\n      ggplot(WinningMMRperHero) +\n        geom_bar(\n          aes(\n            x = reorder(PrimaryName,-Adj.MMR.Before),\n            y = Adj.MMR.Before,\n            fill = Is.Winner,\n            col = Is.Winner\n          ),\n          stat = 'identity',\n          position = 'dodge',\n          alpha = .55\n        ) +\n        annotate(\n          geom = 'text',\n          x = reorder(\n            WinningMMRperHero$PrimaryName,\n            -WinningMMRperHero$Adj.MMR.Before\n          ),\n          y = 500,\n          label = reorder(\n            WinningMMRperHero$PrimaryName,\n            -WinningMMRperHero$Adj.MMR.Before\n          ),\n          angle = 90,\n          col = 'black',\n          size = 5\n        ) +\n        theme_minimal() %+replace%\n        theme(\n          axis.text.x = element_blank(),\n          legend.position = 'none',\n          plot.background = element_rect(fill = '#808080', color = '#494794'),\n          panel.grid.major = element_line(colour = '#009cff'),\n          panel.grid.minor = element_line(colour = '#009cff')\n        ) +\n        scale_fill_manual(values = plot_colors_fill) +\n        scale_color_manual(values = plot_colors_outline) +\n        ggtitle('Average MMR rating of heores played') +\n        xlab('Blue: Won game | Red: Lost game') +\n        ylab('MMR Before game')\n      \n      \n    }\n    \n    # Plot for auto select over win rate\n    else if (input$HotsSelectInput == 'Auto selected heroes') {\n      ggplot(auto) +\n        geom_bar(\n          aes(\n            x = reorder(PrimaryName,-Is.Winner),\n            y = Is.Winner,\n            fill = Is.Auto.Select,\n            col = Is.Auto.Select\n          ),\n          stat = 'identity',\n          position = 'dodge',\n          alpha = .65\n        ) +\n        theme_minimal() %+replace%\n        theme(\n          axis.text.x = element_blank(),\n          axis.title.y = element_blank(),\n          plot.background = element_rect(fill = '#808080', color = '#494794'),\n          panel.grid.major = element_line(colour = '#009cff'),\n          panel.grid.minor = element_line(colour = '#009cff')\n        ) +\n        scale_fill_manual(values = plot_colors_fill) +\n        scale_color_manual(values = plot_colors_outline) +\n        scale_y_continuous(labels = percent) +\n        xlab('Hero') +\n        annotate(\n          geom = 'text',\n          x = reorder(auto$PrimaryName,-auto$Is.Winner),\n          y = max(auto$Is.Winner) * .01,\n          hjust = 0,\n          label = reorder(auto$PrimaryName,-auto$Is.Winner),\n          angle = 90,\n          col = 'black',\n          size = 5\n        ) +\n        ggtitle('Win rate of auto selected heroes') +\n        geom_hline(yintercept = .5, col = 'dodgerblue4') +\n        annotate(\n          geom = 'text',\n          x = 0,\n          y = .5,\n          hjust = -1,\n          vjust = -1,\n          label = '50%',\n          size = 5,\n          col = 'dodgerblue4'\n        )\n      \n      \n    }\n    \n    # Plot for Hero popularity\n    else if (input$HotsSelectInput == 'Hero popularity') {\n      ggplot(pop) +\n        geom_bar(\n          aes_string(\n            x = reorder(pop$PrimaryName,-pop$X0),\n            y = pop$X0,\n            fill = input$PopRadio,\n            col = input$PopRadio\n          ),\n          stat = 'identity',\n          alpha = .55\n        ) +\n        theme_minimal() %+replace%\n        theme(\n          axis.text.x = element_blank(),\n          axis.title.y = element_blank(),\n          plot.background = element_rect(fill = '#808080', color = '#494794'),\n          panel.grid.major = element_line(colour = '#009cff'),\n          panel.grid.minor = element_line(colour = '#009cff')\n        ) +\n        scale_fill_manual(values = plot_colors_fill) +\n        scale_color_manual(values = plot_colors_outline) +\n        xlab('Hero') +\n        annotate(\n          geom = 'text',\n          x = reorder(pop$PrimaryName,-pop$X0),\n          y = max(pop$X0) * .01,\n          hjust = 0,\n          label = reorder(pop$PrimaryName,-pop$X0),\n          angle = 90,\n          col = 'black'\n        ) +\n        ggtitle('Hero popularity')\n      \n      \n      \n    }\n    \n    \n    else if (input$HotsSelectInput == 'Win rate per role per map') {\n      ggplot(Group_diff) +\n        geom_bar(\n          aes(\n            x = Group,\n            y = Group.difference,\n            fill = Group.difference,\n            col = Group.difference\n          ),\n          stat = 'identity',\n          position = 'dodge'\n        ) +\n        facet_grid(. ~ Map.Name) +\n        scale_fill_continuous(low = 'indianred1', high = 'royalblue1') +\n        scale_color_continuous(low = 'indianred3', high = 'royalblue3') +\n        theme_light() %+replace%\n        theme(\n          axis.text.x = element_text(angle = 90,\n                                     color = 'black'),\n          # strip.text.x = element_text(color = '#009cff', lineheight = 15, size = 15),\n          # strip.background = element_rect(fill = 'red', heightDetails),\n          legend.position = 'none',\n          axis.text.y = element_blank(),\n          plot.background = element_rect(fill = '#808080', color = '#494794'),\n          panel.background = element_rect(fill = '#808080', color = '#494794'),\n          panel.grid.major = element_blank(),\n          panel.grid.minor = element_line(colour = '#009cff')\n        ) +\n        ylab('Team composition') +\n        xlab('Role') +\n        ggtitle('Team composition over maps')\n      \n      \n    }\n    \n    else if (input$HotsSelectInput == 'Hero level') {\n      HM <- ggplot(HeroLevel_MMR) +\n        geom_bar(\n          aes(x = Hero.Level, y = Adj.MMR.Before),\n          stat = 'identity',\n          fill = 'dodgerblue2',\n          col = 'dodgerblue4',\n          alpha = .55\n        ) +\n        theme_minimal() %+replace%\n        theme(\n          axis.text.x = element_blank(),\n          axis.title = element_blank(),\n          plot.background = element_rect(fill = '#808080', color = '#494794'),\n          panel.grid.major = element_line(colour = '#009cff'),\n          panel.grid.minor = element_line(colour = '#009cff')\n        ) +\n        xlab('Hero Level') +\n        ylab('Average MMR') +\n        ggtitle('Average MMR over hero level') +\n        annotate(\n          geom = 'text',\n          x = 0:4 * 5,\n          label = 0:4 * 5,\n          y = 0,\n          vjust = 0,\n          size = 5\n        )\n      \n      HD <- ggplot(HeroLevel_Diff) +\n        geom_bar(\n          aes(x = Difficulty, y = Hero.Level),\n          stat = 'identity',\n          fill = 'dodgerblue2',\n          col = 'dodgerblue4',\n          alpha = .55\n        ) +\n        theme_minimal() %+replace%\n        theme(\n          axis.text.x = element_blank(),\n          axis.title = element_blank(),\n          plot.background = element_rect(fill = '#808080', color = '#494794'),\n          panel.grid.major = element_line(colour = '#009cff'),\n          panel.grid.minor = element_line(colour = '#009cff')\n        ) +\n        xlab('Difficulty') +\n        ylab('Average hero level') +\n        ggtitle('Average hero level over difficulty') +\n        annotate(\n          geom = 'text',\n          x = HeroLevel_Diff$Difficulty,\n          label = HeroLevel_Diff$Difficulty,\n          y = 0,\n          hjust = 0,\n          angle = 90,\n          size = 5\n        )\n      \n      HG <- ggplot(HeroLevel_Group) +\n        geom_bar(\n          aes(x = reorder(Group,-Hero.Level), y = Hero.Level),\n          stat = 'identity',\n          fill = 'dodgerblue2',\n          col = 'dodgerblue4',\n          alpha = .55\n        ) +\n        theme_minimal() %+replace%\n        theme(\n          axis.text.x = element_blank(),\n          axis.title = element_blank(),\n          plot.background = element_rect(fill = '#808080', color = '#494794'),\n          panel.grid.major = element_line(colour = '#009cff'),\n          panel.grid.minor = element_line(colour = '#009cff')\n        ) +\n        xlab('Role') +\n        ylab('Average hero level') +\n        ggtitle('Average hero level over hero role') +\n        annotate(\n          geom = 'text',\n          x = reorder(HeroLevel_Group$Group,-HeroLevel_Group$Hero.Level),\n          label = reorder(HeroLevel_Group$Group,-HeroLevel_Group$Hero.Level),\n          y = 0,\n          hjust = 0,\n          angle = 90,\n          size = 5\n        )\n      \n      HS <- ggplot(HeroLevel_SubGroup) +\n        geom_bar(\n          aes(x = reorder(SubGroup,-Hero.Level),\n              y = Hero.Level),\n          stat = 'identity',\n          fill = 'dodgerblue2',\n          col = 'dodgerblue4',\n          alpha = .55\n        ) +\n        theme_minimal() %+replace%\n        theme(\n          axis.text.x = element_blank(),\n          axis.title = element_blank(),\n          plot.background = element_rect(fill = '#808080', color = '#494794'),\n          panel.grid.major = element_line(colour = '#009cff'),\n          panel.grid.minor = element_line(colour = '#009cff')\n        ) +\n        xlab('Sub-role') +\n        ylab('Average hero level') +\n        ggtitle('Average hero level over hero sub-role') +\n        annotate(\n          geom = 'text',\n          x = reorder(\n            HeroLevel_SubGroup$SubGroup,\n            -HeroLevel_SubGroup$Hero.Level\n          ),\n          label = reorder(\n            HeroLevel_SubGroup$SubGroup,\n            -HeroLevel_SubGroup$Hero.Level\n          ),\n          y = 0,\n          hjust = 0,\n          angle = 90,\n          size = 5\n        )\n      \n      \n      multiplot(HM, HD, HG, HS, cols = 2)\n      \n      \n    }\n    \n  })\n  \n  \n  output$imagespace1 <- renderImage({\n    fm <- normalizePath(file.path('png_files/blank.png'))\n    if (input$HotsSelectInput == \"Game duration\")  {\n      # fm <- normalizePath(file.path('png_files/MMR_herolvl.png'))\n      fm <-\n        normalizePath(file.path(\n          paste('png_files/maps/', input$SelectMap, '.png', sep = '')\n        ))\n      \n    }\n    list(src = fm)\n  },\n  deleteFile = F)\n  \n  output$imagespace2 <- renderImage({\n    fm <- normalizePath(file.path('png_files/blank.png'))\n    if (input$HotsSelectInput == \"Game duration\")  {\n      # fm <- normalizePath(file.path('png_files/MMR_herolvl.png'))\n      fm <-\n        normalizePath(file.path(\n          paste('png_files/maps/', input$SelectMap2, '.png', sep = '')\n        ))\n      \n    }\n    list(src = fm)\n  },\n  deleteFile = F)\n  \n  \n  output$helptextbox <- renderText({\n    if (input$HotsSelectInput == 'Auto selected heroes')\n      \"For the given date range, it seems like Graymane and ChoGall weren't part of the auto-select pool.\n    The difference in the win-rate between auto-select True and False can be seen as an indication of how difficult it can be to learn how to play the hero.\"\n    else if (input$HotsSelectInput == 'Game duration')\n      \"The heatmaps plot game duration (y-axis) over the teams' average MMR difference (x-axis). The brightness of the cells indicate density.\n    Most of the heatmaps have a horizontal stretch, indicating that games where the teams are of equal strength tend to last longer.\n    Battlefield of Eternity and Infernal Shrines are two maps where there's an interesting split divide in game duration\n    I haven't played HoTS in many many months, so I don't know how these maps work :(\"\n    else if (input$HotsSelectInput == 'Hero level')\n      \"The two graphs on the right shows what people in general prefer. Top left graph shows there's a correlation between hero level and MMR.\n    It might sound duh, but if you see someone with a hero master skin, you're already a bit more cautious ;) Point is, the more you play, the better you'll become.\"\n    else if (input$HotsSelectInput == 'Hero MMR rating')\n      \"This graph shows the average MMR of all the players per hero. In essence it shows what the hero preference is of higher skilled players.\n    I've added a ticker to show how this changes over time, but the time period is too short to see any cool trends.\n    I was hoping to see something cool when I split the average MMR over win/ loose, but I think the difference you see is just due to noise.\"\n    else if (input$HotsSelectInput == 'Hero popularity')\n      \"Simple graph, but it's still interesting. The difficulty level for each hero is from the actual game.\"\n    else if (input$HotsSelectInput == 'Win rate per role per map')\n      \"I really like this graph, it shows the team composition over the different maps.\n    For example, in Battlefield of Eternity, the losing team has more support/ warriors whereas at Infernal Shrine the winning team has more assassins.\n    One thing that is clear from this graph, is that not having a specialist is bad mkay. \"\n    \n  })\n  \n  observeEvent(input$HotsSelectInput,\n               if (input$HotsSelectInput == 'Game duration') {\n                 hide('hotsplot')\n                 show('imagespace1')\n                 show('imagespace2')\n                 show('helptextbox')\n               } else if (input$HotsSelectInput ==  \"--about--\") {\n                 \n                 hide('hotsplot')\n                 hide('imagespace1')\n                 hide('imagespace2')\n                 hide('helptextbox')\n                 \n               } else\n               {\n                 show('hotsplot')\n                 hide('imagespace1')\n                 hide('imagespace2')\n                 show('helptextbox')\n               } \n               \n               \n               \n               )\n  \n  # observeEvent(input$HotsSelectInput,\n  #              if (input$HotsSelectInput == '--about--') {\n  #                hide('helptextbox')\n  # } else if (input$HotsSelectInput != '--about--') {\n  #     show('helptextbox')\n  #   })\n  \n  \n})\n",
    "created" : 1477551731539.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3052338716",
    "id" : "443766C1",
    "lastKnownWriteTime" : 1478609389,
    "last_content_update" : 1478609389826,
    "path" : "C:/Worksies/hots/shiny/server.R",
    "project_path" : "shiny/server.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}