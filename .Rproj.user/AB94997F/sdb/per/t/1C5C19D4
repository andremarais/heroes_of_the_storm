{
    "contents" : "library(plyr)\nlibrary(ggplot2)\nlibrary(magrittr)\nlibrary(scales)\nlibrary(jsonlite)\n\nheroes <- read.csv('ReplayCharacters 2015-12-30 - 2016-01-29.csv')\nreplays <- read.csv('Replays 2015-12-30 - 2016-01-29.csv')\nreplays$Timestamp..UTC. <- as.Date(substring(replays$Timestamp..UTC., 1, 10), '%m/%d/%Y')\n\nhero.info <- read.csv('hero_info.csv')\nheroes <- merge(heroes, hero.info, by =\"HeroID\")\nheroes <- merge(heroes, replays[, c('ReplayID', 'Timestamp..UTC.')], by = 'ReplayID')\nheroes <- heroes[!is.na(heroes$MMR.Before), ]\nheroes <- heroes[order(heroes$ReplayID, heroes$Is.Winner),]\n\n\n\n# kak plot\nrole_agg <- \n  count(df = heroes, vars =  c(\"ReplayID\", \"Is.Winner\", \"Role\")) \naggregate(data = role_agg,freq ~ Role + Is.Winner, mean)  %>%\n  ggplot() + geom_bar(aes(y = freq, x = Role), stat = 'identity') + facet_grid(Is.Winner ~.)\n\n# MMR rating of 1700 is a problem, it might be the starting rating\n# imputing it makes sense to smooth the ratings \n\nsource('lm.R')\n\n\nheroes$MMR.Before.adj <- heroes$MMR.Before\nheroes$MMR.Before.adj[heroes$MMR.Before == 1700] <- predict(MMR_model, heroes[heroes$MMR.Before == 1700, ])\n\nggplot(heroes) +\n  geom_density(aes(x = MMR.Before), fill = 'dodgerblue', alpha = .65) +\n  geom_density(aes(x = MMR.Before.adj), fill = 'indianred', alpha = .65) +\n  theme_minimal()\n\nggplot() + \n  geom_density(data = heroes[heroes$Is.Winner == 'True', ], \n               aes(x = MMR.Before.adj), fill = 'dodgerblue', alpha = .65) +\n  geom_density(data = heroes[heroes$Is.Winner == 'False', ], \n               aes(x = MMR.Before.adj), fill = 'indianred', alpha = .65) +\n  theme_minimal()\n\nhero.win.rate <- aggregate(data = heroes, Is.Winner == 'True' ~ HeroID, mean) \n  \ncolnames(hero.win.rate) <- c(\"Hero\", \"WR\")\nggplot(hero.win.rate) + \n  geom_bar(aes(x = reorder(Hero, -WR), y = WR), stat = 'identity', fill = 'lightsteelblue1') +\n  theme_minimal() %+replace% \n  theme(axis.text.x = element_blank(),\n        axis.text.y = element_text()) + \n  annotate(geom = 'text', \n           x = reorder(hero.win.rate$Hero, -hero.win.rate$WR), \n           y = 0.1, \n           label = reorder(hero.win.rate$Hero, -hero.win.rate$WR), \n           angle = 90,\n           col = 'lightsteelblue4') +\n  annotate(geom = 'text', \n           x = levels(reorder(hero.win.rate$Hero, -hero.win.rate$WR))[1], \n           y = 0.51, \n           label = '50%',\n           col = 'lightsteelblue4') +\n  geom_hline(yintercept = .5, col = 'lightsteelblue3')+\n  xlab('Heroes') +\n  ylab('Win rate')\n\nhero_mmr_winrate <- \n  aggregate(data = heroes, MMR.Before ~ Hero + Is.Winner, mean) \n\nggplot(hero_mmr_winrate) + \n  geom_bar(aes(x = reorder(Hero, -MMR.Before), y = MMR.Before, fill = Is.Winner), stat = 'identity', position = 'dodge')+\n  theme_minimal() %+replace% \n  theme(axis.text.x = element_blank()) +\n  scale_fill_manual(values = c('lightsteelblue1', 'lightsteelblue2')) +\n  annotate(geom = 'text', \n           x = reorder(hero_mmr_winrate$Hero, -hero_mmr_winrate$MMR.Before), \n           y = 200, \n           label = reorder(hero_mmr_winrate$Hero, -hero_mmr_winrate$MMR.Before), \n           angle = 90,\n           col = 'lightsteelblue4') +\n  xlab('Heroes') +\n  ylab('MMR Rating')\n",
    "created" : 1476038656817.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2488235574",
    "id" : "1C5C19D4",
    "lastKnownWriteTime" : 1476735454,
    "path" : "G:/hots/eh.R",
    "project_path" : "eh.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}